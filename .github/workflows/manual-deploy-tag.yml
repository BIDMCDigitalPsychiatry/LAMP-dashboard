name: 'Manual Deploy: Docker Tag'
on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        required: true
        description: Tag of the DOCKER image to deploy
      env:
        type: environment
        default: stg

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:

  locate:
    name: Find Target Image
    runs-on: ubuntu-24.04
    outputs:
      digest: ${{ steps.inspect.outputs.digest }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Configuration
        id: config
        run: |
          REPOSITORY_OWNER=$(tr "[:upper:]" "[:lower:]" <<< "${{ github.repository_owner }}")
          echo "REPOSITORY_OWNER=${REPOSITORY_OWNER}" >> "$GITHUB_OUTPUT"

          REPOSITORY_NAME=$(tr "[:upper:]" "[:lower:]" <<< "${{ github.event.repository.name }}")
          echo "REPOSITORY_NAME=${REPOSITORY_NAME}" >> "$GITHUB_OUTPUT"

          TARGET_IMAGE="ghcr.io/${REPOSITORY_OWNER}/${REPOSITORY_NAME}"
          echo "TARGET_IMAGE=${TARGET_IMAGE}" >> "$GITHUB_OUTPUT"

          TARGET_IMAGE_W_TAG="${TARGET_IMAGE}:${{ inputs.tag }}"
          echo "TARGET_IMAGE_W_TAG=${TARGET_IMAGE_W_TAG}" >> "$GITHUB_OUTPUT"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Pull target tag & inspect
        id: inspect
        run: |
          set -e

          docker pull ${{ steps.config.outputs.TARGET_IMAGE_W_TAG }}
          checksum=$(
            docker inspect ${{ steps.config.outputs.TARGET_IMAGE_W_TAG }} \
              | jq '.[].RepoDigests.[]' \
              | tr -d '"' \
              | sed 's/^.*@//'
          )

          echo "digest=${checksum}" >> "$GITHUB_OUTPUT"
  deploy:
    name: "Deploy"
    uses: ./.github/workflows/callable-deploy-ecs.yml
    secrets: inherit
    with:
      env: ${{ inputs.env }}
      container_digest: ${{ needs.locate.outputs.digest }}
    needs:
      - locate