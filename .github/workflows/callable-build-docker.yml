name: "Build docker image"
on:
  workflow_call:
    inputs:
      override_sha:
        description: 'Optionally force checkout of a specific sha'
        required: false
        type: string
      push:
        description: 'To push or not to push'
        required: true
        type: boolean
    outputs:
      container_image_digest:
        description: "The sha256 digest of the built container image"
        value: ${{ jobs.build-image.outputs.digest }}

permissions:
  packages: write
  contents: read
  attestations: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-image:
    runs-on: ubuntu-24.04
    outputs:
      digest: ${{ steps.push.outputs.digest }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.override_sha != '' }}
        with:
          fetch-depth: 1
          ref: ${{ inputs.override_sha }}

      - uses: actions/checkout@v4
        if: ${{ inputs.override_sha == '' }}
        with:
          fetch-depth: 1

      - name: Configuration
        id: config
        run: |
          REPOSITORY_OWNER=$(tr "[:upper:]" "[:lower:]" <<< "${{ github.repository_owner }}")
          echo "REPOSITORY_OWNER=${REPOSITORY_OWNER}" >> "$GITHUB_OUTPUT"

          REPOSITORY_NAME=$(tr "[:upper:]" "[:lower:]" <<< "${{ github.event.repository.name }}")
          echo "REPOSITORY_NAME=${REPOSITORY_NAME}" >> "$GITHUB_OUTPUT"

          TARGET_IMAGE="ghcr.io/${REPOSITORY_OWNER}/${REPOSITORY_NAME}"
          echo "TARGET_IMAGE=${TARGET_IMAGE}" >> "$GITHUB_OUTPUT"

          # Image Tags
          SPECIFIC_TAG="type=raw,value=sha-${{ inputs.override_sha }}"
          DEFAULT_TAGS=`cat <<EOF
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
          EOF
          `
          if [[ "${{ inputs.override_sha }}" == "" ]]; then
            echo "TAGS=${DEFAULT_TAGS}" >> "$GITHUB_OUTPUT"
          else
            echo "TAGS=${SPECIFIC_TAG}" >> "$GITHUB_OUTPUT"
          fi

          # Image Labels
          OVERRIDE_SHA_LABELS=`cat <<EOF
          org.opencontainers.image.revision=${{ inputs.override_sha }}
          org.opencontainers.image.version=unknown
          EOF
          `

          if [[ "${{ inputs.override_sha }}" == "" ]]; then
            echo "OVERRIDE_LABELS=" >> "$GITHUB_OUTPUT"
          else
            echo "OVERRIDE_LABELS=$OVERRIDE_SHA_LABELS" >> "$GITHUB_OUTPUT"
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ steps.config.outputs.REPOSITORY_OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          context: workflow
          images: ${{ steps.config.outputs.TARGET_IMAGE }}
          tags: ${{ steps.config.outputs.TAGS }}
          labels: ${{ steps.config.outputs.OVERRIDE_LABELS }}
          flavor: |
            latest=false

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        if: ${{ inputs.push }}
        with:
          subject-name: ${{ steps.config.outputs.TARGET_IMAGE }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: ${{ inputs.push }}
